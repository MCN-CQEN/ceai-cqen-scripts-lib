name: "Publier une image au registre des conteneurs d'images"
description: "Publier une image Docker aux registry (GitHub Packages)"
inputs:
  registry:
    description: "Le registre où publier l'image produite"
    required: true
    default: ghcr.io
  image-name:
    description: "Le nom de l'image à produire"
    required: true
    default: ${{ github.repository }}
  github-token:
    description: "Le token pour se logger au registre des conteneurs d'images"
    required: true
  repository:
    description: "Le repo de code où l'image est construite"
    required: false
    default: ${{ github.repository }}
  ref:
    description: "La référence (branch, tags) du repo de code où l'image est construite"
    required: false
    default: ${{ github.ref }}
  path:
    description: "Le chemin vers le répertoire contenant le Dockerfile et les sources de l'image"
    required: false
    default: "."   
  push-to-registry:
    description: "Indique si l'image doit être poussée au registre (true/false)"
    required: false
    default: true 
  tags:
    description: "Les tags à appliquer à l'image (séparés par des virgules)"
    required: false
    default: "" # Si vide, les tags seront générés automatiquement par l'action metadata-action
  labels:
    description: "Les labels à appliquer à l'image (sous forme de paires clé-valeur, séparées par des virgules)"
    required: false
    default: "" # Si vide, les labels seront générés automatiquement par l'action metadata-action

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
        path: ${{ inputs.path }}      
    
    - name: Log in au registre de conteneurs d'images
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Extract metadata (tags, labels) pour Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{inputs.registry}}/${{inputs.image-name}}

    - name: Valeur du tag et de l'étiquette de l'image
      id: tags
      run: |
        echo "IMAGE_TAGS=${{ inputs.tags != '' && inputs.tags || steps.meta.outputs.tags }}" >> $GITHUB_OUTPUTS
        echo "IMAGE_TAGS: $IMAGE_TAGS"
        echo "IMAGE_LABELS=${{ inputs.labels != '' && inputs.labels || steps.meta.outputs.labels }}" >> $GITHUB_OUTPUTS
        echo "IMAGE_LABELS: $IMAGE_LABELS"
      shell: bash

    - name: Build et push de l'image Docker
      id: push
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.path }}
        push: ${{ inputs.push-to-registry }}
        tags: ${{ needs.tags.outputs.IMAGE_TAGS }}
        labels: ${ needs.tags.outputs.IMAGE_LABELS }
        
    - name: Générer le certificat de l'artefact
      # seulement si le repository est public
      if: github.repository_visibility == 'public' # cette condition est nécessaire pour éviter les erreurs de publication dans les repositories privés
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{inputs.registry}}/${{inputs.image-name}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true                     
